.. _project-goals:

##########################
项目目标与愿景
##########################

本文档详细阐述了 Qzen (千针) 项目的总体愿景、目标用户、待解决的核心问题以及详细的功能需求。

项目简介
==================

Qzen (千针) 是一个专为Windows用户设计的本地文档整理客户端。它旨在通过智能化的工具，帮助用户高效地管理数以千计的本地文档文件，核心功能包括清理重复文件和对内容相似的文件进行聚类分析。

目标用户
==================

本项目主要服务于在Windows操作系统下，因工作、学习或个人知识管理积累了大量文档（数千份级别），并面临以下困扰的个人用户：

* 研究人员、学生、作家等需要处理大量参考文献和资料的群体。
* 办公室职员、法务、行政人员等日常工作中产生大量报告、合同和归档文件的专业人士。
* 任何希望对其个人数字文档资产进行系统性整理和优化的用户。

核心问题
==================

Qzen 致力于解决以下四个核心问题：

1.  **存储空间浪费**: 同一份文档在不同路径下存在多个副本，占用不必要的磁盘空间。
2.  **内容版本混乱**: 难以快速识别哪些文档是同一内容的不同微小修订版，或主题高度相似。
3.  **信息检索困难**: 无法仅凭文件名，快速找到包含特定主题或关键词的文档集合。
4.  **手动整理低效**: 手动逐一对比、归类、重命名成千上万的文档是一项耗时巨大且容易出错的工作。

核心功能详述
====================

.. contents::
   :local:
   :depth: 2

用户配置
------------------

用户可以清晰地配置程序运行所需的各项参数，并将其保存，以便后续使用。

* **数据库配置**: 提供DM8数据库的连接信息（地址、端口、用户名、密码）。
* **路径配置**:
    * **源文件夹**: 指定需要被处理的原始文档所在的根目录。
    * **中间文件夹**: 处理后的、无重复的文档将被复制到此目录，作为后续分析的基础。
    * **目标文件夹**: 最终聚类和整理结果的输出目录。
* **参数配置**: 设置相似度阈值等用于聚类和重命名的核心参数。

文档去重
------------------

扫描源文件夹，精确识别内容完全相同的文档，并将唯一的文档副本复制到中间文件夹。

* **处理范围**: 仅处理常见的文档文件类型（如 .txt, .md, .pdf, .docx 等），其他文件（如 .exe, .zip）将被忽略。
* **实现方式**: 通过计算每个文件的SHA-256哈希值进行精确比对。
* **结果输出**: 执行完毕后，在界面上清晰地列出所有被识别为重复而未被复制的文档及其原始路径。

文档相似度评估
--------------------------

为了在保证效率和性能的前提下，快速评估文档间的相似性，程序将对中间文件夹内的文档进行预处理。此过程由业务逻辑层 (``qzen_core``) 中的 ``similarity_engine`` 模块负责，并通过数据访问层 (``qzen_data``) 与数据库交互。

* **内容切片**: 由 ``qzen_data.file_handler`` 负责。提取每个文档的开头和结尾部分内容（例如，各提取1KB）作为文档的核心摘要。这是一种权衡了计算效率和内容代表性的策略。

* **特征向量化**: 由 ``qzen_core.similarity_engine`` 负责。该模块将使用 ``scikit-learn`` 库的 ``TfidfVectorizer`` 对所有文档的内容切片进行批量处理，将文本转化为TF-IDF数值型特征向量。这是一个计算密集型操作，必须在后台 ``QThread`` 中执行。

* **持久化**: 由 ``qzen_data.database_handler`` 负责。计算出的特征向量将与文档的路径、哈希值等元信息一同被封装为 ``Document`` 对象（定义于 ``qzen_data.models``），并存入DM8数据库。程序启动时会优先从数据库加载已存在的向量，避免对未修改的文件进行重复计算。

相似文件搜索
--------------------

提供交互式搜索功能，帮助用户快速找到与指定文档内容相近的其他文档。

* **输入**: 用户在中间文件夹中选择一个目标文件 T。
* **输出**: 程序将基于预计算的特征向量，使用余弦相似度，快速返回与文件T最相似的前10个文件列表。
* **后续操作**: 用户可以选择列表中的一个或多个文件，将它们复制到专门的目录 目标文件夹\T 中，便于集中查看。

相似文件重命名
--------------------------

提供一键式的自动聚类与重命名功能，将相似的文档组织成簇。

* **触发**: 用户设定一个相似度阈值（例如0.85）。
* **过程**: 程序遍历所有文档，将相似度高于阈值的文档归为一簇。
* **重命名规则**:
    * 程序自动从文件簇的所有原始文件名中提取最长的公共子字符串作为簇的共同前缀（例如 "A"）。
    * 簇内文件被重命名为 "A1", "A2", "A3"...
    * 不同簇之间使用不同的前缀（例如 "B1", "B2"...）。
* **结果输出**: 操作完成后，在界面上展示清晰的重命名映射关系，格式为“原文件名 -> 新文件名”。

文件名聚类
------------------

根据文件名中包含的关键词，快速对文件进行分类。

* **输入**: 用户输入一个关键词 M。
* **过程**: 程序搜索中间文件夹中所有文件名包含关键词M的文件。
* **输出**: 在界面上列出所有匹配的搜索结果。同时，将所有匹配的文件复制到 目标文件夹\M 目录中。

文件内容聚类
--------------------

根据文件内容切片中包含的关键词，进行分类。

* **输入**: 用户输入一个关键词 N。
* **过程**: 程序在所有文档的内容切片中搜索包含关键词N的文档。
* **输出**: 在界面上列出所有匹配的搜索结果。同时，将所有匹配的文档复制到 目标文件夹\N 目录中。
