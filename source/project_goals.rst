.. _project-goals:

##########################
项目目标与愿景 (v3.2)
##########################

本文档详细阐述了 Qzen (千针) 项目的总体愿景、目标用户、待解决的核心问题以及详细的功能需求。

项目简介
==================

Qzen (千针) v3.2 是一个专为 Windows 用户设计的智能文档整理平台。它通过一个强大的、**多轮次的文档组织引擎**，帮助用户将数以千计的本地文档从混乱状态整理成结构清晰的目录树。

v3.2 的核心升级在于引入了一个**基于“移动”而非“复制”的迭代式聚类工作流**，并增加了核心的“相似文件分析”功能。程序首先对文档进行批量去重和向量化，然后通过 K-Means 宏观分类和相似文件微观分组相结合的方式，直接在用户指定的“中间文件夹”内重组目录结构。所有文件状态和路径均由数据库统一管理，确保了大规模操作下的高性能和数据一致性。

目标用户
==================

本项目主要服务于在Windows操作系统下，因工作、学习或个人知识管理积累了大量文档（数千份级别），并面临以下困扰的个人用户：

*   研究人员、学生、作家等需要处理大量参考文献和资料的群体。
*   办公室职员、法务、行政人员等日常工作中产生大量报告、合同和归档文件的专业人士。
*   任何希望对其个人数字文档资产进行系统性、深度整理和优化的用户。

核心问题
==================

Qzen 致力于解决以下四个核心问题：

1.  **存储空间浪费**: 同一份文档在不同路径下存在多个副本，占用不必要的磁盘空间。
2.  **内容版本混乱**: 难以快速识别哪些文档是同一内容的不同微小修订版，或主题高度相似。
3.  **信息检索困难**: 无法仅凭文件名，快速找到包含特定主题或关键词的文档集合。
4.  **手动整理低效**: 手动逐一对比、归类、重命名成千上万的文档是一项耗时巨大且容易出错的工作。

核心工作流与功能详述 (v3.2)
=================================

Qzen v3.2 的使用流程被设计成一个清晰、连贯的五阶段工作流。

.. contents::
   :local:
   :depth: 2

阶段一：用户配置
----------------------

用户可以清晰地配置程序运行所需的各项参数，并将其保存，以便后续使用。

*   **数据库配置**: 提供 DM8 数据库的连接信息（地址、端口、用户名、密码）。

    *   **初始化策略**: 每次程序启动时，将**逐一清空并重新创建**所有本程序创建和修改的数据表，确保每次运行都在一个干净、可预测的状态下开始。删除和新建表的操作逐一进行，因为DM8可能不支持create all和drop all语法。

*   **路径配置**:

    *   **源文件夹**: 指定需要被处理的原始文档所在的根目录。
    *   **中间文件夹**: **核心工作目录**。去重后的文件将被复制到此目录，并且所有后续的聚类整理操作都将**直接在此文件夹内移动文件、创建子文件夹**。
    *   **目标文件夹**: **可选的导出目录**。用于“关键词搜索”和“相似文件分析”功能，将结果复制到此目录下的同名子文件夹中。

*   **参数配置**: 设置 K-Means 的簇数量（K值）、相似度阈值等核心参数。
*   **自定义停用词 (Custom Stopwords)**: 提供一个可编辑的列表，用于定义在文本分析中应被忽略的用户专属高频词（如公司名、产品名），以提高聚类和关键词提取的准确性。

阶段二：批量处理与数据库构建
------------------------------------

这是所有整理工作的基础。在此阶段，程序会扫描“源文件夹”，执行去重、预处理和向量化，并将所有文件的元数据加载到数据库中。

*   **文档去重**: 通过计算文件 SHA-256 哈希值，精确识别内容完全相同的文档。唯一的文档副本将被复制到“中间文件夹”。
*   **文本预处理与向量化**: 对“中间文件夹”内的每个文档执行以下操作：

    1.  **文本提取与清洗**: 从文件（.pdf, .docx, .txt等）中提取纯净的文本内容。
    2.  **内容切片**: 提取文本的开头和结尾部分作为核心摘要。
    3.  **分词与停用词过滤**: 使用 `jieba` 分词，并移除通用及自定义停用词。
    4.  **TF-IDF 特征向量化**: 使用 `scikit-learn` 将文本转化为数值型特征向量。此计算密集型操作将在后台 `QThread` 中执行。

*   **数据库构建**:

    *   **唯一ID**: 为“中间文件夹”中的每一个文件分配一个唯一的数据库ID。
    *   **数据持久化**: 将每个文件的**唯一ID、绝对路径、哈希值、内容切片、特征向量**等所有元信息，封装为 `Document` 对象，完整存入数据库。

    *   **唯一事实来源**: 数据库成为管理所有文件状态的**唯一事实来源**。后续所有操作都通过查询和更新数据库来执行，避免了大量文件IO和内存占用。

阶段三：多轮次聚类引擎
----------------------------

这是 Qzen 的核心功能。用户可以对“中间文件夹”及其任意子文件夹，进行一轮或多轮的、逐步细化的聚类整理。

*   **操作目标**: 用户通过一个标准的“选择文件夹”对话框，来指定一个文件夹（初始默认为“中间文件夹”的根目录）作为本轮聚类的目标。程序完成聚类后，仅会提示操作成功，用户需自行在文件系统中查看结果。
*   **文件操作**: 整个聚类过程通过 **移动 (Move)** 文件来重组目录结构，**不会删除或复制**。该操作的本质是更新数据库中文件的路径字段，然后执行物理文件移动。
*   **聚类流程**:

    1.  **第一步：K-Means 宏观分类**:

        *   程序从数据库中读取目标文件夹下所有文件的特征向量。
        *   执行 K-Means 算法，将这些文件分成 K 个簇。
        *   在当前目录下，为每个簇创建一个以数字编号命名的子文件夹（如 `0/`, `1/`, ..., `K-1/`）。
        *   将属于每个簇的文件**移动**到对应的数字子文件夹中。

    2.  **第二步：相似文件微观分组**:

        *   程序自动遍历刚才创建的每一个数字子文件夹（`0/` 到 `K-1/`）。
        *   在每个数字子文件夹内部，执行基于内容相似度的二次聚类。
        *   对于识别出的相似文件簇，程序会提取其核心主题词，并创建一个以主题词命名的孙文件夹（如 `0/教育_新基建/`）。
        *   将这些相似文件从数字子文件夹**移动**到对应的主题孙文件夹中。

*   **迭代优化**: 用户可以重复此过程。例如，选择 `0/` 文件夹，再次指定一个新的 K 值进行更细粒度的 K-Means 聚类，从而实现对文档的逐层深入整理。
*   **自动清理**: 在每一轮聚类操作成功执行后，程序将自动从底向上扫描目标文件夹，并**删除所有在本次操作中产生的空子文件夹**，以保持目录结构的整洁。

阶段四：关键词搜索
------------------------------------------

在聚类整理之后，用户可以使用关键词搜索功能来快速查找文件。

*   **按文件名搜索**: 用户输入关键词，程序在数据库中快速查找文件名匹配的所有文件。
*   **按文件内容搜索**: 用户输入关键词，程序在数据库中快速查找内容切片包含该关键词的所有文件。
*   **结果操作**: 搜索结果将以列表形式清晰地展示在界面上。每一条结果前都有一个**复选框**。列表顶部提供一个“**全选/全不选**”的复选框。用户可以通过勾选来选择一个或多个文件，然后点击“导出选中项”按钮，将它们**复制**到“目标文件夹”下的一个以“关键词”命名的子文件夹中，便于导出和分享。

阶段五：相似文件分析 (v3.2 新增)
------------------------------------

此功能允许用户选择任意一个位于“中间文件夹”中的文件，并找出与其内容最相似的其他文件。

*   **源文件选择**: 用户通过一个“选择源文件...”按钮，打开一个文件选择对话框（默认定位到“中间文件夹”），来指定一个基准文件。
*   **相似度分析**: 用户点击“查找相似文件”按钮。程序会利用已预热的相似度引擎，在数据库中快速计算并返回与该源文件最相似的 Top-N 文件列表。
*   **结果展示与导出**:

    *   返回的结果列表将包含每个相似文件的**文件路径**和**余弦相似度分数**。
    *   结果列表的每一行前都有一个**复选框**，顶部提供“**全选/全不选**”功能。
    *   用户勾选所需文件后，点击“导出选中项”按钮。
    *   程序会将所有选中的文件**复制**到“目标文件夹”下的一个新子文件夹中。该子文件夹将以源文件的文件名（不含扩展名）并加上“_相似文件”后缀来命名（例如 `MyReport_相似文件/`）。
